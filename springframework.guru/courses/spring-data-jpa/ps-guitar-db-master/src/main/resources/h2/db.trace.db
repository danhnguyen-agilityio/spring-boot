01-02 17:16:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:16:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:16:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-02 17:17:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE MANUFACTURER ADD COLUMN ACTIVE BOOLEAN NOT NULL INSERT[*] INTO LOCATION (ID, COUNTRY, STATE) VALUES (1, 'United States', 'Alabama') "; SQL statement:
alter table manufacturer add column active boolean not null insert into location (id, country, state) values (1, 'United States', 'Alabama') [42000-182]
01-03 15:32:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "headquarters_id" not found [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3120)
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3208)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:668)
	at org.hibernate.type.descriptor.sql.BigIntTypeDescriptor$2.doExtract(BigIntTypeDescriptor.java:74)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:64)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:267)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:263)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.ManyToOneType.hydrate(ManyToOneType.java:190)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:2969)
	at org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1696)
	at org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1628)
	at org.hibernate.loader.Loader.getRow(Loader.java:1515)
	at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:726)
	at org.hibernate.loader.Loader.processResultSet(Loader.java:953)
	at org.hibernate.loader.Loader.doQuery(Loader.java:921)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:355)
	at org.hibernate.loader.Loader.doList(Loader.java:2554)
	at org.hibernate.loader.Loader.doList(Loader.java:2540)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2370)
	at org.hibernate.loader.Loader.list(Loader.java:2365)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:353)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:1873)
	at org.hibernate.internal.AbstractSessionImpl.list(AbstractSessionImpl.java:311)
	at org.hibernate.internal.SQLQueryImpl.list(SQLQueryImpl.java:141)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:573)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:449)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy41.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:110)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:74)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:98)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:421)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:381)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$DefaultMethodInvokingMethodInterceptor.invoke(RepositoryFactorySupport.java:512)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.invoke(CrudMethodMetadataPostProcessor.java:122)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy33.getAllThatSellAcoustics(Unknown Source)
	at com.guitar.db.repository.ManufacturerRepository.getManufacturersThatSellModelsOfType(ManufacturerRepository.java:73)
	at com.guitar.db.ManufacturerPersistenceTests.testGetManufacturersThatSellModelsOfType(ManufacturerPersistenceTests.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
01-03 16:45:18 database: CREATE INDEX PUBLIC.FK4710B097D6BF938_INDEX_4 ON PUBLIC.MODEL(MANUFACTURER_ID)
org.h2.jdbc.JdbcSQLException: IO Exception: "java.io.IOException: The process cannot access the file because another process has locked a portion of the file"; "D:/training/java-training/springframework.guru/courses/spring-data-jpa/ps-guitar-db-master/src/main/resources/h2/db.h2.db"; SQL statement:
CREATE INDEX PUBLIC.FK4710B097D6BF938_INDEX_4 ON PUBLIC.MODEL(MANUFACTURER_ID) [90031-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convertIOException(DbException.java:330)
	at org.h2.store.FileStore.readFully(FileStore.java:275)
	at org.h2.store.PageStore.readPage(PageStore.java:1325)
	at org.h2.store.PageStore.getPage(PageStore.java:749)
	at org.h2.index.PageBtreeIndex.getPage(PageBtreeIndex.java:148)
	at org.h2.index.PageBtreeIndex.<init>(PageBtreeIndex.java:69)
	at org.h2.table.RegularTable.addIndex(RegularTable.java:234)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:94)
	at org.h2.engine.MetaRecord.execute(MetaRecord.java:58)
	at org.h2.engine.Database.open(Database.java:732)
	at org.h2.engine.Database.openDatabase(Database.java:266)
	at org.h2.engine.Database.<init>(Database.java:260)
	at org.h2.engine.Engine.openSession(Engine.java:60)
	at org.h2.engine.Engine.openSession(Engine.java:167)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:145)
	at org.h2.engine.Engine.createSession(Engine.java:128)
	at org.h2.engine.Engine.createSession(Engine.java:26)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:347)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:108)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:565)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:541)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:907)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:914)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:884)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:804)
Caused by: java.io.IOException: The process cannot access the file because another process has locked a portion of the file
	at java.io.RandomAccessFile.readBytes(Native Method)
	at java.io.RandomAccessFile.read(RandomAccessFile.java:377)
	at org.h2.store.fs.FileDisk.read(FilePathDisk.java:467)
	at org.h2.store.fs.FileUtils.readFully(FileUtils.java:356)
	at org.h2.store.FileStore.readFully(FileStore.java:273)
	... 39 more
