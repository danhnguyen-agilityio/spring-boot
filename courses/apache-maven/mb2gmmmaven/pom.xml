<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>guru.springframework</groupId>
    <artifactId>mb2g-mm-maven</artifactId>
    <version>${revision}</version>

    <packaging>pom</packaging>

    <modules>
        <module>jpa-entities</module>
        <module>from-intellij</module>
        <module>web-api</module>
        <module>web-app</module>
        <module>converters</module>
    </modules>

    <properties>
        <revision>1.0-SNAPSHOT</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <mapstruct.version>1.2.0.Final</mapstruct.version>
        <hibernate.version>5.4.24.Final</hibernate.version>
        <lombok.version>1.18.4</lombok.version>
        <jaxb.version>2.3.0</jaxb.version>
    </properties>

    <!-- https://www.baeldung.com/spring-maven-bom   -->
    <!-- Maven POM is an XML file that contains information and configurations (about the project) that are used by
    Maven to import dependencies and to build the project.   -->
    <!-- BOM stands for Bill Of Materials. A BOM is a special kind of POM that is used to control the versions of a
    projectâ€™s dependencies and provide a central place to define and update those versions.   -->
    <!-- BOM provides the flexibility to add a dependency to our module without worrying about the version that we should depend on.    -->
    <!-- Dependency Management is a mechanism to centralize the dependency information.    -->
    <!-- When we have a set of projects that inherit a common parent, we can put all dependency information in a shared POM file called BOM.    -->
    <!-- The BOM is a normal POM file with a dependencyManagement section where we can include all an artifact's information and versions.   -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <flattenMode>bom</flattenMode>
                </configuration>
                <executions>
                    <!-- Enable flattening                   -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- Ensure proper cleanup                   -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Require java version >= 11 and maven >= 3.5            -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-env-requirements</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[1.8,)</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>[3.5,)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>