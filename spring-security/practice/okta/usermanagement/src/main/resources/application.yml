server:
    # Define a custom port instead of the default 8080
    port: 8443
    ssl:
        enabled: true
        # The format used for the keystore
        key-store-type: PKCS12
        # The path to the keystore containing the certificate
        key-store: classpath:keystore/keystore.p12
        # The password used to generate the certificate
        key-store-password: 123456
        # The alias mapped to the certificate
        key-alias: tomcat

security:
    # Tell Spring security to require request over HTTPS
    require-ssl: true

okta:
    # Web service configuration
    oauth2:
        issuer: https://dev-343362.okta.com/oauth2/default
        client-id: 0oan4mt8yDscBwAOF356
        audience: api://default
        rolesClaim: groups

    # Api Token
    client:
        org-url: https://dev-343362.okta.com
        token: 008ENnAtf3KVIDXzTXZcbHh50crWrtjon_gxR8NPBV

spring:
    # Specify which profiles are active
    profiles:
        active: dev

    mvc:
        throw-exception-if-no-handler-found: true
    resources:
        add-mappings: false

    # JPA / HIBERNATE
    # Use spring.jpa.properties.* for Hibernate native properties
    jpa:
        # Show or not log for each sql query
        show-sql: true

        hibernate:
            # Hibernate ddl auto (create, create-drop, update): with "update" the database
            # schema will be automatically updated accordingly to java entities found in
            # the project
            ddl-auto: update

        # Automatically generate table from java entities if need
        generate-ddl: true

        properties:
            hibernate:
                # Allows Hibernate to generate SQL optimized for a particular DBMS
                dialect: org.hibernate.dialect.MySQL5Dialect
                format_sql: true
                generate_stastistics: true

    # JACKSON
    jackson:
        serialization:
            # Disable converting dates to timestamps and instead use a ISO-8601 compliant format
            write_dates_as_timestamps: false
        # Controls the inclusion of properties during serialization
        default-property-inclusion: non_null
        mapper:
            # Controls properties that have no view associated are serialized
            default_view_inclusion: true

# LEVEL LOGGING
logging:
    level:
        com.agility.usermanagement: DEBUG



