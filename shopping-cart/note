*********************************************
***** Not for SSL certificae *******
*********************************************

- Create RSA key: openssl genrsa -out server.key 2048
- Create CSR (Certificate Signing Request): openssl req -new -key server.key -out server.csr
- Create self signed certificate: openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
- Create keystore p12 from certificate: openssl pkcs12 -export -in server.crt -inkey server.key -out server.p12 -name tomcat
- Create keystore JKS from p12:
+ Example: keytool -importkeystore -deststorepass 123456 -destkeystore keystore.jks -srckeystore server.p12 -srcstoretype PKCS12 -alias tomcat
+ Syntax: keytool -importkeystore \
          -deststorepass [changeit] -destkeypass [changeit] -destkeystore server.keystore \
          -srckeystore server.p12 -srcstoretype PKCS12 -srcstorepass some-password \
          -alias [some-alias]

- Generate keystore P12 from encoded certificate file (get certificate on browser)
+ Convert the certificate: openssl x509 -inform DER -outform PEM -in certificate.cer -out certificate.pem
+ Build the PKCS#12: openssl pkcs12 -export -in certificate.pem -inkey server.key -out server.p12 -name tomcat

- Get contain keystore
+ keytool -list -v -keystore keystore.jks => get content JKS
+ keytool -list -v -storetype pkcs12 -keystore keystore.p12 => get content PKCS12

- Verify the certificate: keytool -printcert -file ${PATH_TO_CERTIFCATE}/selfsigned.crt

- Export self-signed certificate if you want to distribute to the clients
+ keytool -export -keystore keystore.jks -alias tomcat -file myCertificate.crt

- Create keystore from existing SSL certificate without private key
+ keytool -import -alias tomcat -file server.crt -keystore keystoresss.p12 -storepass 123456
+ keytool -import -trustcacerts -file server.crt -keystore keystoresss.jks -alias tomcat -storepass 123456

openssl x509 -inform DER -outform PEM -in Certificates.cer -out certificate.pem

